/*
 * spirits
 *
 * spirits is a turn-based battle royale game
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package api

// Session - An isolated collection of Battle's and Team's
type Session struct {

	// The unique name of this Session
	Name string `json:"name"`

	Auth SessionAuth `json:"auth,omitempty"`
}

// AssertSessionRequired checks if the required fields are not zero-ed
func AssertSessionRequired(obj Session) error {
	elements := map[string]interface{}{
		"name": obj.Name,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertSessionAuthRequired(obj.Auth); err != nil {
		return err
	}
	return nil
}

// AssertRecurseSessionRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Session (e.g. [][]Session), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseSessionRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aSession, ok := obj.(Session)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertSessionRequired(aSession)
	})
}
