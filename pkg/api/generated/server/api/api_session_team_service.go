/*
 * spirits
 *
 * spirits is a turn-based battle royale game
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package server

import (
	"context"
	"errors"
	"net/http"
)

// SessionTeamApiService is a service that implements the logic for the SessionTeamApiServicer
// This service should implement the business logic for every endpoint for the SessionTeamApi API.
// Include any external packages or services that will be required by this service.
type SessionTeamApiService struct {
}

// NewSessionTeamApiService creates a default api service
func NewSessionTeamApiService() SessionTeamApiServicer {
	return &SessionTeamApiService{}
}

// CreateSessionTeam -
func (s *SessionTeamApiService) CreateSessionTeam(ctx context.Context, sessionName string, team Team) (ImplResponse, error) {
	// TODO - update CreateSessionTeam with the required logic for this service method.
	// Add api_session_team_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(201, Team{}) or use other options such as http.Ok ...
	//return Response(201, Team{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateSessionTeam method not implemented")
}

// DeleteSessionTeam -
func (s *SessionTeamApiService) DeleteSessionTeam(ctx context.Context, sessionName string, teamName string) (ImplResponse, error) {
	// TODO - update DeleteSessionTeam with the required logic for this service method.
	// Add api_session_team_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Team{}) or use other options such as http.Ok ...
	//return Response(200, Team{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteSessionTeam method not implemented")
}

// GetSessionTeam -
func (s *SessionTeamApiService) GetSessionTeam(ctx context.Context, sessionName string, teamName string) (ImplResponse, error) {
	// TODO - update GetSessionTeam with the required logic for this service method.
	// Add api_session_team_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Team{}) or use other options such as http.Ok ...
	//return Response(200, Team{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetSessionTeam method not implemented")
}

// ListSessionTeams -
func (s *SessionTeamApiService) ListSessionTeams(ctx context.Context, sessionName string) (ImplResponse, error) {
	// TODO - update ListSessionTeams with the required logic for this service method.
	// Add api_session_team_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Team{}) or use other options such as http.Ok ...
	//return Response(200, Team{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("ListSessionTeams method not implemented")
}

// UpdateSessionTeam -
func (s *SessionTeamApiService) UpdateSessionTeam(ctx context.Context, sessionName string, teamName string, team Team) (ImplResponse, error) {
	// TODO - update UpdateSessionTeam with the required logic for this service method.
	// Add api_session_team_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Team{}) or use other options such as http.Ok ...
	//return Response(200, Team{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("UpdateSessionTeam method not implemented")
}
