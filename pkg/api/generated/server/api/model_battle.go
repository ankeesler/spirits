/*
 * spirits
 *
 * spirits is a turn-based battle royale game
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package server

// Battle - A skirmish amongst Spirit's
type Battle struct {

	// The unique name of this Battle
	Name string `json:"name"`

	// The spirits involved in this Battle.
	Spirits []string `json:"spirits"`
}

// AssertBattleRequired checks if the required fields are not zero-ed
func AssertBattleRequired(obj Battle) error {
	elements := map[string]interface{}{
		"name":    obj.Name,
		"spirits": obj.Spirits,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseBattleRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Battle (e.g. [][]Battle), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseBattleRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aBattle, ok := obj.(Battle)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertBattleRequired(aBattle)
	})
}
