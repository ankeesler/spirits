/*
 * spirits
 *
 * spirits is a turn-based battle royale game
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package server

// Action - A reference to a Spirit's Action
type Action struct {

	// The name of a Spirit's Action
	Name string `json:"name"`
}

// AssertActionRequired checks if the required fields are not zero-ed
func AssertActionRequired(obj Action) error {
	elements := map[string]interface{}{
		"name": obj.Name,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseActionRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Action (e.g. [][]Action), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseActionRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aAction, ok := obj.(Action)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertActionRequired(aAction)
	})
}
