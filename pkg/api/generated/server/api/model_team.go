/*
 * spirits
 *
 * spirits is a turn-based battle royale game
 *
 * API version: 0.0.1
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package api

// Team - A collection Spirit's
type Team struct {

	// The unique name of this Team
	Name string `json:"name"`
}

// AssertTeamRequired checks if the required fields are not zero-ed
func AssertTeamRequired(obj Team) error {
	elements := map[string]interface{}{
		"name": obj.Name,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseTeamRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of Team (e.g. [][]Team), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseTeamRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aTeam, ok := obj.(Team)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertTeamRequired(aTeam)
	})
}
