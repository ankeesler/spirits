// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	"context"

	scheme "github.com/ankeesler/spirits/pkg/apis/clientset/versioned/scheme"
	v1alpha1 "github.com/ankeesler/spirits/pkg/apis/spirits/input/v1alpha1"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	rest "k8s.io/client-go/rest"
)

// ActionCallsGetter has a method to return a ActionCallInterface.
// A group's client should implement this interface.
type ActionCallsGetter interface {
	ActionCalls(namespace string) ActionCallInterface
}

// ActionCallInterface has methods to work with ActionCall resources.
type ActionCallInterface interface {
	Create(ctx context.Context, actionCall *v1alpha1.ActionCall, opts v1.CreateOptions) (*v1alpha1.ActionCall, error)
	ActionCallExpansion
}

// actionCalls implements ActionCallInterface
type actionCalls struct {
	client rest.Interface
	ns     string
}

// newActionCalls returns a ActionCalls
func newActionCalls(c *InputV1alpha1Client, namespace string) *actionCalls {
	return &actionCalls{
		client: c.RESTClient(),
		ns:     namespace,
	}
}

// Create takes the representation of a actionCall and creates it.  Returns the server's representation of the actionCall, and an error, if there is any.
func (c *actionCalls) Create(ctx context.Context, actionCall *v1alpha1.ActionCall, opts v1.CreateOptions) (result *v1alpha1.ActionCall, err error) {
	result = &v1alpha1.ActionCall{}
	err = c.client.Post().
		Namespace(c.ns).
		Resource("actioncalls").
		VersionedParams(&opts, scheme.ParameterCodec).
		Body(actionCall).
		Do(ctx).
		Into(result)
	return
}
