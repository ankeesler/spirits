//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha1

import (
	plugin "github.com/ankeesler/spirits/internal/apis/spirits/plugin"
	spiritsv1alpha1 "github.com/ankeesler/spirits/pkg/apis/spirits/v1alpha1"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*ActionRun)(nil), (*plugin.ActionRun)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ActionRun_To_plugin_ActionRun(a.(*ActionRun), b.(*plugin.ActionRun), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*plugin.ActionRun)(nil), (*ActionRun)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_plugin_ActionRun_To_v1alpha1_ActionRun(a.(*plugin.ActionRun), b.(*ActionRun), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*plugin.ActionRunSpec)(nil), (*ActionRunSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_plugin_ActionRunSpec_To_v1alpha1_ActionRunSpec(a.(*plugin.ActionRunSpec), b.(*ActionRunSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*plugin.ActionRunStatus)(nil), (*ActionRunStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_plugin_ActionRunStatus_To_v1alpha1_ActionRunStatus(a.(*plugin.ActionRunStatus), b.(*ActionRunStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*ActionRunSpec)(nil), (*plugin.ActionRunSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ActionRunSpec_To_plugin_ActionRunSpec(a.(*ActionRunSpec), b.(*plugin.ActionRunSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*ActionRunStatus)(nil), (*plugin.ActionRunStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ActionRunStatus_To_plugin_ActionRunStatus(a.(*ActionRunStatus), b.(*plugin.ActionRunStatus), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha1_ActionRun_To_plugin_ActionRun(in *ActionRun, out *plugin.ActionRun, s conversion.Scope) error {
	if err := Convert_v1alpha1_ActionRunSpec_To_plugin_ActionRunSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_ActionRunStatus_To_plugin_ActionRunStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_ActionRun_To_plugin_ActionRun is an autogenerated conversion function.
func Convert_v1alpha1_ActionRun_To_plugin_ActionRun(in *ActionRun, out *plugin.ActionRun, s conversion.Scope) error {
	return autoConvert_v1alpha1_ActionRun_To_plugin_ActionRun(in, out, s)
}

func autoConvert_plugin_ActionRun_To_v1alpha1_ActionRun(in *plugin.ActionRun, out *ActionRun, s conversion.Scope) error {
	if err := Convert_plugin_ActionRunSpec_To_v1alpha1_ActionRunSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_plugin_ActionRunStatus_To_v1alpha1_ActionRunStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_plugin_ActionRun_To_v1alpha1_ActionRun is an autogenerated conversion function.
func Convert_plugin_ActionRun_To_v1alpha1_ActionRun(in *plugin.ActionRun, out *ActionRun, s conversion.Scope) error {
	return autoConvert_plugin_ActionRun_To_v1alpha1_ActionRun(in, out, s)
}

func autoConvert_v1alpha1_ActionRunSpec_To_plugin_ActionRunSpec(in *ActionRunSpec, out *plugin.ActionRunSpec, s conversion.Scope) error {
	// INFO: in.From opted out of conversion generation
	// INFO: in.To opted out of conversion generation
	return nil
}

func autoConvert_plugin_ActionRunSpec_To_v1alpha1_ActionRunSpec(in *plugin.ActionRunSpec, out *ActionRunSpec, s conversion.Scope) error {
	if err := spiritsv1alpha1.Convert_spirits_SpiritSpec_To_v1alpha1_SpiritSpec(&in.From, &out.From, s); err != nil {
		return err
	}
	if err := spiritsv1alpha1.Convert_spirits_SpiritSpec_To_v1alpha1_SpiritSpec(&in.To, &out.To, s); err != nil {
		return err
	}
	return nil
}

// Convert_plugin_ActionRunSpec_To_v1alpha1_ActionRunSpec is an autogenerated conversion function.
func Convert_plugin_ActionRunSpec_To_v1alpha1_ActionRunSpec(in *plugin.ActionRunSpec, out *ActionRunSpec, s conversion.Scope) error {
	return autoConvert_plugin_ActionRunSpec_To_v1alpha1_ActionRunSpec(in, out, s)
}

func autoConvert_v1alpha1_ActionRunStatus_To_plugin_ActionRunStatus(in *ActionRunStatus, out *plugin.ActionRunStatus, s conversion.Scope) error {
	// INFO: in.From opted out of conversion generation
	// INFO: in.To opted out of conversion generation
	return nil
}

func autoConvert_plugin_ActionRunStatus_To_v1alpha1_ActionRunStatus(in *plugin.ActionRunStatus, out *ActionRunStatus, s conversion.Scope) error {
	if err := spiritsv1alpha1.Convert_spirits_SpiritSpec_To_v1alpha1_SpiritSpec(&in.From, &out.From, s); err != nil {
		return err
	}
	if err := spiritsv1alpha1.Convert_spirits_SpiritSpec_To_v1alpha1_SpiritSpec(&in.To, &out.To, s); err != nil {
		return err
	}
	return nil
}

// Convert_plugin_ActionRunStatus_To_v1alpha1_ActionRunStatus is an autogenerated conversion function.
func Convert_plugin_ActionRunStatus_To_v1alpha1_ActionRunStatus(in *plugin.ActionRunStatus, out *ActionRunStatus, s conversion.Scope) error {
	return autoConvert_plugin_ActionRunStatus_To_v1alpha1_ActionRunStatus(in, out, s)
}
