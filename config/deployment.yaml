---
apiVersion: v1
kind: Namespace
metadata:
  namespace: spirits
  name: spirits
---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: spirits
  name: spirits-manager
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  namespace: spirits
  name: spirits-manager:spirits-manager
subjects:
- kind: ServiceAccount
  name: spirits-manager
  namespace: spirits
roleRef:
  kind: ClusterRole
  name: spirits-manager
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: spirits
  name: spirits-manager
  annotations:
    a: b
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spirits-manager
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: spirits-manager
    spec:
      serviceAccount: spirits-manager
      containers:
      - image: spirits-manager
        name: spirits-manager

# TODO: we should create these in apiserver.Start().
# We should be able to get the Service namespace from inside the pod.
# We can get the Service name from...will have to think.
# We can just Create() from the apiserver and check that the error is nil or AlreadyExists.
---
apiVersion: v1
kind: Service
metadata:
  namespace: spirits
  name: spirits-apiserver
spec:
  type: ClusterIP
  selector:
    app: spirits-manager
  ports:
    - protocol: TCP
      port: 443
      targetPort: 9444
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  name: v1alpha1.spirits.ankeesler.github.com
spec:
  version: v1alpha1
  group: spirits.ankeesler.github.com
  groupPriorityMinimum: 9900
  versionPriority: 15
  insecureSkipTLSVerify: true
  service:
    name: spirits-apiserver
    namespace: spirits
    port: 443  
