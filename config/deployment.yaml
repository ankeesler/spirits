---
apiVersion: v1
kind: Namespace
metadata:
  namespace: spirits
  name: spirits
---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: spirits
  name: spirits-server
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  namespace: spirits
  name: spirits-server:spirits-server
subjects:
- kind: ServiceAccount
  name: spirits-server
  namespace: spirits
roleRef:
  kind: ClusterRole
  name: spirits-server
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: spirits
  name: spirits-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spirits-server
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: spirits-server
    spec:
      serviceAccount: spirits-server
      containers:
      - image: ankeesler/spirits-server
        name: spirits-server

# TODO: we should create these in apiserver.Start().
# We should be able to get the Service namespace from inside the pod.
# We can get the Service name from...will have to think.
# We can just Create() from the apiserver and check that the error is nil or AlreadyExists.
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   namespace: spirits
#   name: spirits-apiserver
# spec:
#   type: ClusterIP
#   selector:
#     app: spirits-server
#   ports:
#     - protocol: TCP
#       port: 443
#       targetPort: 9444
# ---
# apiVersion: apiregistration.k8s.io/v1
# kind: APIService
# metadata:
#   name: v1alpha1.spirits.ankeesler.github.io
# spec:
#   version: v1alpha1
#   group: spirits.ankeesler.github.io
#   groupPriorityMinimum: 9900
#   versionPriority: 15
#   insecureSkipTLSVerify: true
#   service:
#     name: spirits-apiserver
#     namespace: spirits
#     port: 443  
