// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.1
// source: battle.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// BattleState describes which stage a Battle is in.
//
// The Battle stages go like this:
//   Pending (waiting for Spirit's to join)
//     |
//     v
//   Started (started executing)
//     ^
//     |
//     v
//   Waiting (waiting for input from user)
//     |
//     v
//   Finished (execution finished)
//    ...
// <any state>
//     |
//     v
//   Cancelled (battle has been cancelled)
//    ...
// <any state>
//     |
//     v
//   Error (battle has entered into a failure mode)
type BattleState int32

const (
	BattleState_BATTLE_STATE_UNSPECIFIED BattleState = 0
	BattleState_BATTLE_STATE_PENDING     BattleState = 1
	BattleState_BATTLE_STATE_STARTED     BattleState = 2
	BattleState_BATTLE_STATE_WAITING     BattleState = 3
	BattleState_BATTLE_STATE_FINISHED    BattleState = 4
	BattleState_BATTLE_STATE_CANCELLED   BattleState = 5
	BattleState_BATTLE_STATE_ERROR       BattleState = 6
)

// Enum value maps for BattleState.
var (
	BattleState_name = map[int32]string{
		0: "BATTLE_STATE_UNSPECIFIED",
		1: "BATTLE_STATE_PENDING",
		2: "BATTLE_STATE_STARTED",
		3: "BATTLE_STATE_WAITING",
		4: "BATTLE_STATE_FINISHED",
		5: "BATTLE_STATE_CANCELLED",
		6: "BATTLE_STATE_ERROR",
	}
	BattleState_value = map[string]int32{
		"BATTLE_STATE_UNSPECIFIED": 0,
		"BATTLE_STATE_PENDING":     1,
		"BATTLE_STATE_STARTED":     2,
		"BATTLE_STATE_WAITING":     3,
		"BATTLE_STATE_FINISHED":    4,
		"BATTLE_STATE_CANCELLED":   5,
		"BATTLE_STATE_ERROR":       6,
	}
)

func (x BattleState) Enum() *BattleState {
	p := new(BattleState)
	*p = x
	return p
}

func (x BattleState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BattleState) Descriptor() protoreflect.EnumDescriptor {
	return file_battle_proto_enumTypes[0].Descriptor()
}

func (BattleState) Type() protoreflect.EnumType {
	return &file_battle_proto_enumTypes[0]
}

func (x BattleState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BattleState.Descriptor instead.
func (BattleState) EnumDescriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{0}
}

// BattleTeamSpiritIntelligence describes how a Spirit will decide to take
// SpiritAction in a Battle.
type BattleTeamSpiritIntelligence int32

const (
	BattleTeamSpiritIntelligence_BATTLE_TEAM_SPIRIT_INTELLIGENCE_UNSPECIFIED BattleTeamSpiritIntelligence = 0
	// A human will decide this Spirit's SpiritAction's via CallAction.
	BattleTeamSpiritIntelligence_BATTLE_TEAM_SPIRIT_INTELLIGENCE_HUMAN BattleTeamSpiritIntelligence = 1
	// This Spirit will chose SpiritActions randomly.
	BattleTeamSpiritIntelligence_BATTLE_TEAM_SPIRIT_INTELLIGENCE_RANDOM BattleTeamSpiritIntelligence = 2
)

// Enum value maps for BattleTeamSpiritIntelligence.
var (
	BattleTeamSpiritIntelligence_name = map[int32]string{
		0: "BATTLE_TEAM_SPIRIT_INTELLIGENCE_UNSPECIFIED",
		1: "BATTLE_TEAM_SPIRIT_INTELLIGENCE_HUMAN",
		2: "BATTLE_TEAM_SPIRIT_INTELLIGENCE_RANDOM",
	}
	BattleTeamSpiritIntelligence_value = map[string]int32{
		"BATTLE_TEAM_SPIRIT_INTELLIGENCE_UNSPECIFIED": 0,
		"BATTLE_TEAM_SPIRIT_INTELLIGENCE_HUMAN":       1,
		"BATTLE_TEAM_SPIRIT_INTELLIGENCE_RANDOM":      2,
	}
)

func (x BattleTeamSpiritIntelligence) Enum() *BattleTeamSpiritIntelligence {
	p := new(BattleTeamSpiritIntelligence)
	*p = x
	return p
}

func (x BattleTeamSpiritIntelligence) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BattleTeamSpiritIntelligence) Descriptor() protoreflect.EnumDescriptor {
	return file_battle_proto_enumTypes[1].Descriptor()
}

func (BattleTeamSpiritIntelligence) Type() protoreflect.EnumType {
	return &file_battle_proto_enumTypes[1]
}

func (x BattleTeamSpiritIntelligence) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BattleTeamSpiritIntelligence.Descriptor instead.
func (BattleTeamSpiritIntelligence) EnumDescriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{1}
}

type CreateBattleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateBattleRequest) Reset() {
	*x = CreateBattleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBattleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBattleRequest) ProtoMessage() {}

func (x *CreateBattleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBattleRequest.ProtoReflect.Descriptor instead.
func (*CreateBattleRequest) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{0}
}

type CreateBattleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The created Battle.
	Battle *Battle `protobuf:"bytes,1,opt,name=battle,proto3" json:"battle,omitempty"`
}

func (x *CreateBattleResponse) Reset() {
	*x = CreateBattleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBattleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBattleResponse) ProtoMessage() {}

func (x *CreateBattleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBattleResponse.ProtoReflect.Descriptor instead.
func (*CreateBattleResponse) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{1}
}

func (x *CreateBattleResponse) GetBattle() *Battle {
	if x != nil {
		return x.Battle
	}
	return nil
}

type ListBattlesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListBattlesRequest) Reset() {
	*x = ListBattlesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBattlesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBattlesRequest) ProtoMessage() {}

func (x *ListBattlesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBattlesRequest.ProtoReflect.Descriptor instead.
func (*ListBattlesRequest) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{2}
}

type ListBattlesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The known Battle's.
	Battles []*Battle `protobuf:"bytes,1,rep,name=battles,proto3" json:"battles,omitempty"`
}

func (x *ListBattlesResponse) Reset() {
	*x = ListBattlesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBattlesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBattlesResponse) ProtoMessage() {}

func (x *ListBattlesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBattlesResponse.ProtoReflect.Descriptor instead.
func (*ListBattlesResponse) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{3}
}

func (x *ListBattlesResponse) GetBattles() []*Battle {
	if x != nil {
		return x.Battles
	}
	return nil
}

type WatchBattleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the Battle to watch.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *WatchBattleRequest) Reset() {
	*x = WatchBattleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchBattleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchBattleRequest) ProtoMessage() {}

func (x *WatchBattleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchBattleRequest.ProtoReflect.Descriptor instead.
func (*WatchBattleRequest) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{4}
}

func (x *WatchBattleRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type WatchBattleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The Battle that has been updated.
	Battle *Battle `protobuf:"bytes,1,opt,name=battle,proto3" json:"battle,omitempty"`
}

func (x *WatchBattleResponse) Reset() {
	*x = WatchBattleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchBattleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchBattleResponse) ProtoMessage() {}

func (x *WatchBattleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchBattleResponse.ProtoReflect.Descriptor instead.
func (*WatchBattleResponse) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{5}
}

func (x *WatchBattleResponse) GetBattle() *Battle {
	if x != nil {
		return x.Battle
	}
	return nil
}

type AddBattleTeamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the Battle to which to add this BattleTeam.
	BattleId string `protobuf:"bytes,1,opt,name=battle_id,json=battleId,proto3" json:"battle_id,omitempty"`
	// The name of the new BattleTeam.
	TeamName string `protobuf:"bytes,2,opt,name=team_name,json=teamName,proto3" json:"team_name,omitempty"`
}

func (x *AddBattleTeamRequest) Reset() {
	*x = AddBattleTeamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBattleTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBattleTeamRequest) ProtoMessage() {}

func (x *AddBattleTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBattleTeamRequest.ProtoReflect.Descriptor instead.
func (*AddBattleTeamRequest) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{6}
}

func (x *AddBattleTeamRequest) GetBattleId() string {
	if x != nil {
		return x.BattleId
	}
	return ""
}

func (x *AddBattleTeamRequest) GetTeamName() string {
	if x != nil {
		return x.TeamName
	}
	return ""
}

type AddBattleTeamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The newly updated Battle.
	Battle *Battle `protobuf:"bytes,1,opt,name=battle,proto3" json:"battle,omitempty"`
}

func (x *AddBattleTeamResponse) Reset() {
	*x = AddBattleTeamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBattleTeamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBattleTeamResponse) ProtoMessage() {}

func (x *AddBattleTeamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBattleTeamResponse.ProtoReflect.Descriptor instead.
func (*AddBattleTeamResponse) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{7}
}

func (x *AddBattleTeamResponse) GetBattle() *Battle {
	if x != nil {
		return x.Battle
	}
	return nil
}

type AddBattleTeamSpiritRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the Battle to which to add this BattleTeamSpirit.
	BattleId string `protobuf:"bytes,1,opt,name=battle_id,json=battleId,proto3" json:"battle_id,omitempty"`
	// The name of the BattleTeam to which to add the Spirit.
	TeamName string `protobuf:"bytes,2,opt,name=team_name,json=teamName,proto3" json:"team_name,omitempty"`
	// The BattleTeamSpirit to add to the BattleTeam.
	Spirit *BattleTeamSpirit `protobuf:"bytes,3,opt,name=spirit,proto3" json:"spirit,omitempty"`
}

func (x *AddBattleTeamSpiritRequest) Reset() {
	*x = AddBattleTeamSpiritRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBattleTeamSpiritRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBattleTeamSpiritRequest) ProtoMessage() {}

func (x *AddBattleTeamSpiritRequest) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBattleTeamSpiritRequest.ProtoReflect.Descriptor instead.
func (*AddBattleTeamSpiritRequest) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{8}
}

func (x *AddBattleTeamSpiritRequest) GetBattleId() string {
	if x != nil {
		return x.BattleId
	}
	return ""
}

func (x *AddBattleTeamSpiritRequest) GetTeamName() string {
	if x != nil {
		return x.TeamName
	}
	return ""
}

func (x *AddBattleTeamSpiritRequest) GetSpirit() *BattleTeamSpirit {
	if x != nil {
		return x.Spirit
	}
	return nil
}

type AddBattleTeamSpiritResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The newly updated Battle.
	Battle *Battle `protobuf:"bytes,1,opt,name=battle,proto3" json:"battle,omitempty"`
}

func (x *AddBattleTeamSpiritResponse) Reset() {
	*x = AddBattleTeamSpiritResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddBattleTeamSpiritResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddBattleTeamSpiritResponse) ProtoMessage() {}

func (x *AddBattleTeamSpiritResponse) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddBattleTeamSpiritResponse.ProtoReflect.Descriptor instead.
func (*AddBattleTeamSpiritResponse) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{9}
}

func (x *AddBattleTeamSpiritResponse) GetBattle() *Battle {
	if x != nil {
		return x.Battle
	}
	return nil
}

type StartBattleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the Battle to start.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *StartBattleRequest) Reset() {
	*x = StartBattleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartBattleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartBattleRequest) ProtoMessage() {}

func (x *StartBattleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartBattleRequest.ProtoReflect.Descriptor instead.
func (*StartBattleRequest) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{10}
}

func (x *StartBattleRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type StartBattleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The newly started Battle.
	Battle *Battle `protobuf:"bytes,1,opt,name=battle,proto3" json:"battle,omitempty"`
}

func (x *StartBattleResponse) Reset() {
	*x = StartBattleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartBattleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartBattleResponse) ProtoMessage() {}

func (x *StartBattleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartBattleResponse.ProtoReflect.Descriptor instead.
func (*StartBattleResponse) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{11}
}

func (x *StartBattleResponse) GetBattle() *Battle {
	if x != nil {
		return x.Battle
	}
	return nil
}

type CancelBattleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the Battle to cancel.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CancelBattleRequest) Reset() {
	*x = CancelBattleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelBattleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelBattleRequest) ProtoMessage() {}

func (x *CancelBattleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelBattleRequest.ProtoReflect.Descriptor instead.
func (*CancelBattleRequest) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{12}
}

func (x *CancelBattleRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CancelBattleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The newly cancelled Battle.
	Battle *Battle `protobuf:"bytes,1,opt,name=battle,proto3" json:"battle,omitempty"`
}

func (x *CancelBattleResponse) Reset() {
	*x = CancelBattleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelBattleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelBattleResponse) ProtoMessage() {}

func (x *CancelBattleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelBattleResponse.ProtoReflect.Descriptor instead.
func (*CancelBattleResponse) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{13}
}

func (x *CancelBattleResponse) GetBattle() *Battle {
	if x != nil {
		return x.Battle
	}
	return nil
}

// Battle describes a single battle royale amongst Spirit's.
type Battle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Metadata about this Battle.
	Meta *Meta `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	// Current state of the Battle.
	//
	// If this is BATTLE_STATE_ERROR, the error_message field will be set.
	State BattleState `protobuf:"varint,2,opt,name=state,proto3,enum=spirits.BattleState" json:"state,omitempty"`
	// Description of error state.
	//
	// This is only set when the Battle is in BattleState BATTLE_STATE_ERROR.
	ErrorMessage *string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3,oneof" json:"error_message,omitempty"`
	// List of BattleTeam's participating in this Battle.
	//
	// This list references the original Spirit's before any modifications over
	// the course of a Battle.
	Teams []*BattleTeam `protobuf:"bytes,4,rep,name=teams,proto3" json:"teams,omitempty"`
	// List of BattleTeams's participating in this Battle as they exist in the
	// Battle.
	//
	// This list references the current state of Spirit's in this Battle.
	InBattleTeams []*BattleTeam `protobuf:"bytes,5,rep,name=in_battle_teams,json=inBattleTeams,proto3" json:"in_battle_teams,omitempty"`
	// The currently acting Spirit.
	//
	// This is only set when the BattleState is BATTLE_STATE_WAITING.
	ActingSpiritId *string `protobuf:"bytes,6,opt,name=acting_spirit_id,json=actingSpiritId,proto3,oneof" json:"acting_spirit_id,omitempty"`
}

func (x *Battle) Reset() {
	*x = Battle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Battle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Battle) ProtoMessage() {}

func (x *Battle) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Battle.ProtoReflect.Descriptor instead.
func (*Battle) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{14}
}

func (x *Battle) GetMeta() *Meta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *Battle) GetState() BattleState {
	if x != nil {
		return x.State
	}
	return BattleState_BATTLE_STATE_UNSPECIFIED
}

func (x *Battle) GetErrorMessage() string {
	if x != nil && x.ErrorMessage != nil {
		return *x.ErrorMessage
	}
	return ""
}

func (x *Battle) GetTeams() []*BattleTeam {
	if x != nil {
		return x.Teams
	}
	return nil
}

func (x *Battle) GetInBattleTeams() []*BattleTeam {
	if x != nil {
		return x.InBattleTeams
	}
	return nil
}

func (x *Battle) GetActingSpiritId() string {
	if x != nil && x.ActingSpiritId != nil {
		return *x.ActingSpiritId
	}
	return ""
}

// BattleTeam is a group of Spirit's working together in a Battle.
type BattleTeam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique (within Battle) identifier of BattleTeam.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The list of BattleTeamSpirit's in this BattleTeam.
	Spirits []*BattleTeamSpirit `protobuf:"bytes,2,rep,name=spirits,proto3" json:"spirits,omitempty"`
}

func (x *BattleTeam) Reset() {
	*x = BattleTeam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattleTeam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleTeam) ProtoMessage() {}

func (x *BattleTeam) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleTeam.ProtoReflect.Descriptor instead.
func (*BattleTeam) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{15}
}

func (x *BattleTeam) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BattleTeam) GetSpirits() []*BattleTeamSpirit {
	if x != nil {
		return x.Spirits
	}
	return nil
}

// BattleTeamSpirit is a reference to a Spirit as it exists in a BattleTeam.
type BattleTeamSpirit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The identifier of the Spirit as it exists in the SpiritService.
	SpiritId string `protobuf:"bytes,1,opt,name=spirit_id,json=spiritId,proto3" json:"spirit_id,omitempty"`
	// The intelligence tht this Spirit will use.
	Intelligence BattleTeamSpiritIntelligence `protobuf:"varint,2,opt,name=intelligence,proto3,enum=spirits.BattleTeamSpiritIntelligence" json:"intelligence,omitempty"`
}

func (x *BattleTeamSpirit) Reset() {
	*x = BattleTeamSpirit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_battle_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattleTeamSpirit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleTeamSpirit) ProtoMessage() {}

func (x *BattleTeamSpirit) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleTeamSpirit.ProtoReflect.Descriptor instead.
func (*BattleTeamSpirit) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{16}
}

func (x *BattleTeamSpirit) GetSpiritId() string {
	if x != nil {
		return x.SpiritId
	}
	return ""
}

func (x *BattleTeamSpirit) GetIntelligence() BattleTeamSpiritIntelligence {
	if x != nil {
		return x.Intelligence
	}
	return BattleTeamSpiritIntelligence_BATTLE_TEAM_SPIRIT_INTELLIGENCE_UNSPECIFIED
}

var File_battle_proto protoreflect.FileDescriptor

var file_battle_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07,
	0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x73, 0x1a, 0x0a, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x15, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3f, 0x0a, 0x14, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x73, 0x2e, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x52, 0x06, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x40, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x07, 0x62, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x70, 0x69, 0x72,
	0x69, 0x74, 0x73, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x07, 0x62, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x73, 0x22, 0x24, 0x0a, 0x12, 0x57, 0x61, 0x74, 0x63, 0x68, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3e, 0x0a, 0x13, 0x57, 0x61, 0x74,
	0x63, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x27, 0x0a, 0x06, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x73, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x52, 0x06, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x22, 0x50, 0x0a, 0x14, 0x41, 0x64, 0x64,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x65, 0x61, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x40, 0x0a, 0x15, 0x41,
	0x64, 0x64, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x73, 0x2e, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x06, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x22, 0x89, 0x01,
	0x0a, 0x1a, 0x41, 0x64, 0x64, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x53,
	0x70, 0x69, 0x72, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x61,
	0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65,
	0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x73,
	0x2e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x70, 0x69, 0x72, 0x69,
	0x74, 0x52, 0x06, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x22, 0x46, 0x0a, 0x1b, 0x41, 0x64, 0x64,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x62, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x69,
	0x74, 0x73, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x06, 0x62, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x22, 0x24, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3e, 0x0a, 0x13, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27,
	0x0a, 0x06, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x73, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52,
	0x06, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x22, 0x25, 0x0a, 0x13, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3f,
	0x0a, 0x14, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x73,
	0x2e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x06, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x22,
	0xc4, 0x02, 0x0a, 0x06, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x6d, 0x65,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x69,
	0x74, 0x73, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x6d, 0x65,
	0x74, 0x61, 0x12, 0x2a, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x14, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x73, 0x2e, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x28,
	0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x05, 0x74, 0x65, 0x61, 0x6d,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74,
	0x73, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x05, 0x74, 0x65,
	0x61, 0x6d, 0x73, 0x12, 0x3b, 0x0a, 0x0f, 0x69, 0x6e, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x5f, 0x74, 0x65, 0x61, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73,
	0x70, 0x69, 0x72, 0x69, 0x74, 0x73, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x65, 0x61,
	0x6d, 0x52, 0x0d, 0x69, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x73,
	0x12, 0x2d, 0x0a, 0x10, 0x61, 0x63, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x70, 0x69, 0x72, 0x69,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0e, 0x61, 0x63,
	0x74, 0x69, 0x6e, 0x67, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42,
	0x10, 0x0a, 0x0e, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x70, 0x69,
	0x72, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x22, 0x55, 0x0a, 0x0a, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x54, 0x65, 0x61, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x73, 0x70, 0x69, 0x72,
	0x69, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x70, 0x69, 0x72,
	0x69, 0x74, 0x73, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x70,
	0x69, 0x72, 0x69, 0x74, 0x52, 0x07, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x73, 0x22, 0x7a, 0x0a,
	0x10, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x70, 0x69, 0x72, 0x69,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x49, 0x64, 0x12, 0x49,
	0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x67, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x73, 0x2e, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x49,
	0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x67, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0c, 0x69, 0x6e, 0x74,
	0x65, 0x6c, 0x6c, 0x69, 0x67, 0x65, 0x6e, 0x63, 0x65, 0x2a, 0xc8, 0x01, 0x0a, 0x0b, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x42, 0x41, 0x54,
	0x54, 0x4c, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x42, 0x41, 0x54, 0x54, 0x4c,
	0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10,
	0x01, 0x12, 0x18, 0x0a, 0x14, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x42,
	0x41, 0x54, 0x54, 0x4c, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x57, 0x41, 0x49, 0x54,
	0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x04,
	0x12, 0x1a, 0x0a, 0x16, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x05, 0x12, 0x16, 0x0a, 0x12,
	0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0x06, 0x2a, 0xa6, 0x01, 0x0a, 0x1c, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54,
	0x65, 0x61, 0x6d, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x69,
	0x67, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x2f, 0x0a, 0x2b, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x5f,
	0x54, 0x45, 0x41, 0x4d, 0x5f, 0x53, 0x50, 0x49, 0x52, 0x49, 0x54, 0x5f, 0x49, 0x4e, 0x54, 0x45,
	0x4c, 0x4c, 0x49, 0x47, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x29, 0x0a, 0x25, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45,
	0x5f, 0x54, 0x45, 0x41, 0x4d, 0x5f, 0x53, 0x50, 0x49, 0x52, 0x49, 0x54, 0x5f, 0x49, 0x4e, 0x54,
	0x45, 0x4c, 0x4c, 0x49, 0x47, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x48, 0x55, 0x4d, 0x41, 0x4e, 0x10,
	0x01, 0x12, 0x2a, 0x0a, 0x26, 0x42, 0x41, 0x54, 0x54, 0x4c, 0x45, 0x5f, 0x54, 0x45, 0x41, 0x4d,
	0x5f, 0x53, 0x50, 0x49, 0x52, 0x49, 0x54, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x4c, 0x4c, 0x49, 0x47,
	0x45, 0x4e, 0x43, 0x45, 0x5f, 0x52, 0x41, 0x4e, 0x44, 0x4f, 0x4d, 0x10, 0x02, 0x32, 0xc9, 0x04,
	0x0a, 0x0d, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x4d, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x12,
	0x1c, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e,
	0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c,
	0x0a, 0x0b, 0x57, 0x61, 0x74, 0x63, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x2e,
	0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x73, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x70, 0x69,
	0x72, 0x69, 0x74, 0x73, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x4a, 0x0a, 0x0b,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x73, 0x70,
	0x69, 0x72, 0x69, 0x74, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x69,
	0x74, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x1d, 0x2e, 0x73, 0x70, 0x69, 0x72,
	0x69, 0x74, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x65, 0x61,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x69,
	0x74, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x13, 0x41, 0x64,
	0x64, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x70, 0x69, 0x72, 0x69,
	0x74, 0x12, 0x23, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x70, 0x69, 0x72, 0x69, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x73,
	0x2e, 0x41, 0x64, 0x64, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x53, 0x70,
	0x69, 0x72, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a,
	0x0a, 0x0b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x2e,
	0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x70, 0x69,
	0x72, 0x69, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0c, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x12, 0x1c, 0x2e, 0x73, 0x70, 0x69,
	0x72, 0x69, 0x74, 0x73, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x70, 0x69, 0x72, 0x69,
	0x74, 0x73, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6e, 0x6b, 0x65, 0x65, 0x73, 0x6c, 0x65,
	0x72, 0x2f, 0x73, 0x70, 0x69, 0x72, 0x69, 0x74, 0x73, 0x30, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_battle_proto_rawDescOnce sync.Once
	file_battle_proto_rawDescData = file_battle_proto_rawDesc
)

func file_battle_proto_rawDescGZIP() []byte {
	file_battle_proto_rawDescOnce.Do(func() {
		file_battle_proto_rawDescData = protoimpl.X.CompressGZIP(file_battle_proto_rawDescData)
	})
	return file_battle_proto_rawDescData
}

var file_battle_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_battle_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_battle_proto_goTypes = []interface{}{
	(BattleState)(0),                    // 0: spirits.BattleState
	(BattleTeamSpiritIntelligence)(0),   // 1: spirits.BattleTeamSpiritIntelligence
	(*CreateBattleRequest)(nil),         // 2: spirits.CreateBattleRequest
	(*CreateBattleResponse)(nil),        // 3: spirits.CreateBattleResponse
	(*ListBattlesRequest)(nil),          // 4: spirits.ListBattlesRequest
	(*ListBattlesResponse)(nil),         // 5: spirits.ListBattlesResponse
	(*WatchBattleRequest)(nil),          // 6: spirits.WatchBattleRequest
	(*WatchBattleResponse)(nil),         // 7: spirits.WatchBattleResponse
	(*AddBattleTeamRequest)(nil),        // 8: spirits.AddBattleTeamRequest
	(*AddBattleTeamResponse)(nil),       // 9: spirits.AddBattleTeamResponse
	(*AddBattleTeamSpiritRequest)(nil),  // 10: spirits.AddBattleTeamSpiritRequest
	(*AddBattleTeamSpiritResponse)(nil), // 11: spirits.AddBattleTeamSpiritResponse
	(*StartBattleRequest)(nil),          // 12: spirits.StartBattleRequest
	(*StartBattleResponse)(nil),         // 13: spirits.StartBattleResponse
	(*CancelBattleRequest)(nil),         // 14: spirits.CancelBattleRequest
	(*CancelBattleResponse)(nil),        // 15: spirits.CancelBattleResponse
	(*Battle)(nil),                      // 16: spirits.Battle
	(*BattleTeam)(nil),                  // 17: spirits.BattleTeam
	(*BattleTeamSpirit)(nil),            // 18: spirits.BattleTeamSpirit
	(*Meta)(nil),                        // 19: spirits.meta.Meta
}
var file_battle_proto_depIdxs = []int32{
	16, // 0: spirits.CreateBattleResponse.battle:type_name -> spirits.Battle
	16, // 1: spirits.ListBattlesResponse.battles:type_name -> spirits.Battle
	16, // 2: spirits.WatchBattleResponse.battle:type_name -> spirits.Battle
	16, // 3: spirits.AddBattleTeamResponse.battle:type_name -> spirits.Battle
	18, // 4: spirits.AddBattleTeamSpiritRequest.spirit:type_name -> spirits.BattleTeamSpirit
	16, // 5: spirits.AddBattleTeamSpiritResponse.battle:type_name -> spirits.Battle
	16, // 6: spirits.StartBattleResponse.battle:type_name -> spirits.Battle
	16, // 7: spirits.CancelBattleResponse.battle:type_name -> spirits.Battle
	19, // 8: spirits.Battle.meta:type_name -> spirits.meta.Meta
	0,  // 9: spirits.Battle.state:type_name -> spirits.BattleState
	17, // 10: spirits.Battle.teams:type_name -> spirits.BattleTeam
	17, // 11: spirits.Battle.in_battle_teams:type_name -> spirits.BattleTeam
	18, // 12: spirits.BattleTeam.spirits:type_name -> spirits.BattleTeamSpirit
	1,  // 13: spirits.BattleTeamSpirit.intelligence:type_name -> spirits.BattleTeamSpiritIntelligence
	2,  // 14: spirits.BattleService.CreateBattle:input_type -> spirits.CreateBattleRequest
	6,  // 15: spirits.BattleService.WatchBattle:input_type -> spirits.WatchBattleRequest
	4,  // 16: spirits.BattleService.ListBattles:input_type -> spirits.ListBattlesRequest
	8,  // 17: spirits.BattleService.AddBattleTeam:input_type -> spirits.AddBattleTeamRequest
	10, // 18: spirits.BattleService.AddBattleTeamSpirit:input_type -> spirits.AddBattleTeamSpiritRequest
	12, // 19: spirits.BattleService.StartBattle:input_type -> spirits.StartBattleRequest
	14, // 20: spirits.BattleService.CancelBattle:input_type -> spirits.CancelBattleRequest
	3,  // 21: spirits.BattleService.CreateBattle:output_type -> spirits.CreateBattleResponse
	7,  // 22: spirits.BattleService.WatchBattle:output_type -> spirits.WatchBattleResponse
	5,  // 23: spirits.BattleService.ListBattles:output_type -> spirits.ListBattlesResponse
	9,  // 24: spirits.BattleService.AddBattleTeam:output_type -> spirits.AddBattleTeamResponse
	11, // 25: spirits.BattleService.AddBattleTeamSpirit:output_type -> spirits.AddBattleTeamSpiritResponse
	13, // 26: spirits.BattleService.StartBattle:output_type -> spirits.StartBattleResponse
	15, // 27: spirits.BattleService.CancelBattle:output_type -> spirits.CancelBattleResponse
	21, // [21:28] is the sub-list for method output_type
	14, // [14:21] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_battle_proto_init() }
func file_battle_proto_init() {
	if File_battle_proto != nil {
		return
	}
	file_meta_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_battle_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBattleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBattleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBattlesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBattlesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchBattleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchBattleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBattleTeamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBattleTeamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBattleTeamSpiritRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddBattleTeamSpiritResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartBattleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartBattleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelBattleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelBattleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Battle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattleTeam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_battle_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattleTeamSpirit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_battle_proto_msgTypes[14].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_battle_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_battle_proto_goTypes,
		DependencyIndexes: file_battle_proto_depIdxs,
		EnumInfos:         file_battle_proto_enumTypes,
		MessageInfos:      file_battle_proto_msgTypes,
	}.Build()
	File_battle_proto = out.File
	file_battle_proto_rawDesc = nil
	file_battle_proto_goTypes = nil
	file_battle_proto_depIdxs = nil
}
